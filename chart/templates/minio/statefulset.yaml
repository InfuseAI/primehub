{{- if eq (include "minio.enabled" .) "true" -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "minio.fullname" . }}
  labels:
    app: {{ template "minio.name" . }}
    chart: {{ template "minio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "minio.fullname" . }}
  {{- if .Values.minio.s3gateway.enabled }}
  replicas: {{ .Values.minio.s3gateway.replicas }}
  {{- end }}
  {{- if .Values.minio.gcsgateway.enabled }}
  replicas: {{ .Values.minio.gcsgateway.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "minio.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "minio.fullname" . }}
      labels:
        app: {{ template "minio.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/minio/secrets.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/minio/configmap.yaml") . | sha256sum }}
    spec:
{{- if .Values.minio.persistence.enabled }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          {{- if .Values.minio.s3gateway.enabled }}
          command: [ "/bin/sh",
          "-ce",
          "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ gateway s3 {{ .Values.minio.s3gateway.serviceEndpoint }} {{- template `minio.extraArgs` . }}" ]
          {{- else }}
          {{- if .Values.minio.gcsgateway.enabled }}
          command: [ "/bin/sh",
          "-ce",
          "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ gateway gcs {{ .Values.minio.gcsgateway.projectId }} {{- template `minio.extraArgs` . }}" ]
          {{- else }}
          command: [ "/bin/sh",
          "-ce",
          "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server /export {{- template `minio.extraArgs` . }}" ]
          {{- end }}
          {{- end }}
          volumeMounts:
            {{- if and .Values.minio.persistence.enabled (not .Values.minio.gcsgateway.enabled) (not .Values.minio.s3gateway.enabled) }}
            - name: export
              mountPath: /export
            {{- end }}
            {{- if .Values.minio.gcsgateway.enabled }}
            - name: minio-user
              mountPath: "/etc/credentials"
              readOnly: true
            {{- end }}
          ports:
            - name: http
              containerPort: 9000
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.minio.existingSecret }}{{ .Values.minio.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
                  key: accesskey
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.minio.existingSecret }}{{ .Values.minio.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
                  key: secretkey
            {{- if .Values.minio.gcsgateway.enabled }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/credentials/gcs_key.json"
            {{- end }}
            {{- if .Values.minio.s3gateway.enabled -}}
            {{- if .Values.minio.s3gateway.accessKey }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.minio.existingSecret }}{{ .Values.minio.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
                  key: awsAccessKeyId
            {{- end }}
            {{- if .Values.minio.s3gateway.secretKey }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.minio.existingSecret }}{{ .Values.minio.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
                  key: awsSecretAccessKey
            {{- end }}
            {{- end }}
            - name: MINIO_API_READY_DEADLINE
              value: "5s"
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 1
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            ## Set this to 1s higher than MINIO_API_READY_DEADLINE
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.minio.resources | indent 12 }}
{{- with .Values.minio.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.minio.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.minio.imagePullSecrets | nindent 8 }}
{{- end }}
{{- with .Values.minio.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.minio.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
        - name: minio-user
          secret:
            secretName: {{ if .Values.minio.existingSecret }}{{ .Values.minio.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
  {{- if and (not .Values.minio.gcsgateway.enabled) (not .Values.minio.s3gateway.enabled) }}
  {{- if .Values.minio.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: export
      spec:
        accessModes:
          - {{ .Values.minio.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.minio.persistence.size | quote }}
        storageClassName: {{ .Values.minio.persistence.storageClass }}
  {{- end }}
  {{- end }}
{{- end }}
