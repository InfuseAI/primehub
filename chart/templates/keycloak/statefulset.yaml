{{- if .Values.keycloak.deploy }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keycloak.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.keycloak.replicas }}
  serviceName: {{ include "keycloak.name" . }}-headless
  podManagementPolicy: {{ .Values.keycloak.podManagementPolicy }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/secrets: {{ tpl (toYaml .Values.keycloak.password) . | sha256sum }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
    spec:
      {{- if or .Values.keycloak.dbchecker.enabled .Values.keycloak.extraInitContainers }}
      initContainers:
        {{- if and .Values.keycloak.dbchecker.enabled }}
        - name: dbchecker
          image: "{{ .Values.keycloak.dbchecker.image.repository }}:{{ .Values.keycloak.dbchecker.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.dbchecker.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.keycloak.dbchecker.securityContext | nindent 12 }}
          command:
            - sh
            - -c
            - |
              echo 'Waiting for Database to become ready...'

              until printf "." && nc -z -w 2 {{ required ".Values.keycloak.database.hostname is required if dbchecker is enabled!" .Values.keycloak.database.hostname }} {{ required ".Values.keycloak.database.port is required if dbchecker is enabled!" .Values.keycloak.database.port }}; do
                  sleep 2;
              done;

              echo 'Database OK âœ“'
          resources:
            {{- toYaml .Values.keycloak.dbchecker.resources | nindent 12 }}
        {{- end }}
        {{- with .Values.keycloak.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: keycloak
          securityContext:
            {{- toYaml .Values.keycloak.securityContext | nindent 12 }}
          image: "{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
          command:
            - "/opt/keycloak/bin/kc.sh"
            - "--verbose"
            - "start"
            - "--http-enabled=true"
            - "--http-port=8080"
            - "--hostname-strict=false"
            - "--hostname-strict-https=false"
            - "--spi-events-listener-jboss-logging-success-level=info"
            - "--spi-events-listener-jboss-logging-error-level=warn"
          env:
            - name: KC_HTTP_RELATIVE_PATH
              value: /auth
            - name: KC_CACHE
              value: "ispn"
            - name: KC_CACHE_STACK
              value: "kubernetes"
            - name: KC_PROXY
              value: "edge"
            {{- if .Values.keycloak.database.vendor }}
            - name: KC_DB
              value: {{ .Values.keycloak.database.vendor }}
            {{- end }}
            {{- if .Values.keycloak.database.hostname }}
            - name: KC_DB_URL_HOST
              value: {{ .Values.keycloak.database.hostname }}
            {{- end }}
            {{- if .Values.keycloak.database.port }}
            - name: KC_DB_URL_PORT
              value: {{ .Values.keycloak.database.port | quote }}
            {{- end }}
            {{- if .Values.keycloak.database.database }}
            - name: KC_DB_URL_DATABASE
              value: {{ .Values.keycloak.database.database }}
            {{- end }}
            {{- if .Values.keycloak.database.username }}
            - name: KC_DB_USERNAME
              value: {{ .Values.keycloak.database.username }}
            {{- end }}
            {{- if .Values.keycloak.database.password }}
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ include "keycloak.name" . }}-database
            {{- end }}
            {{- if .Values.keycloak.metrics.enabled }}
            - name: KC_METRICS_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.keycloak.health.enabled }}
            - name: KC_HEALTH_ENABLED
              value: "true"
            {{- end }}
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.name" . }}-admin-creds
                  key: user
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.name" . }}-admin-creds
                  key: password
            - name: JAVA_OPTS_APPEND
              value: >-
                -XX:+UseContainerSupport
                -XX:MaxRAMPercentage=50.0
                -Djava.awt.headless=true
                -Djgroups.dns.query={{ include "keycloak.name" . }}-headless
            {{- with .Values.keycloak.extraEnv }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          {{- if .Values.keycloak.health.enabled }}
          {{- with .Values.keycloak.livenessProbe }}
          livenessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          {{- if .Values.keycloak.metrics.enabled }}
          {{- with .Values.keycloak.readinessProbe }}
          readinessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          {{- end}}
          {{- with .Values.keycloak.startupProbe }}
          startupProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.keycloak.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.keycloak.extraVolumeMounts }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
        {{- with .Values.keycloak.extraContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      securityContext:
        {{- toYaml .Values.keycloak.podSecurityContext | nindent 8 }}
      enableServiceLinks: {{ .Values.keycloak.enableServiceLinks }}
      restartPolicy: {{ .Values.keycloak.restartPolicy }}
      {{- with .Values.keycloak.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "keycloak.selectorLabels" . | nindent 18 }}
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: NotIn
                    values:
                      - test
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "keycloak.selectorLabels" . | nindent 20 }}
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: NotIn
                      values:
                        - test
                topologyKey: topology.kubernetes.io/zone
      {{- with .Values.keycloak.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.keycloak.terminationGracePeriodSeconds }}
      volumes:
        {{- with .Values.keycloak.extraVolumes }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
{{- end }}
